#!/bin/bash

GTFS_TOOLS_LIBEXEC_DIR="$(cd $(dirname $0) && pwd)"

function read_options() {
  has_more_options=1
  while [ ${has_more_options} -a $# -gt 0 ]; do
    arg="$1"
    case "${arg}" in
      -d|--database)
        shift
        given_database_name="$1"
        ;;
      -w|--workspace)
        shift
        WORKSPACE_DIR="$( cd $1; pwd )"
        ;;
      --)
        has_more_options=0
        ;;
    esac
    shift
  done
}

read_options $*

[ -z "${WORKSPACE_DIR}" ] && WORKSPACE_DIR="$(pwd)"

DATABASES_DIR="${WORKSPACE_DIR}"

(

  cd "${DATABASES_DIR}"

  for database_dir in $(find . -depth 1 -type d|xargs); do

    if [ -d "${database_dir}" ]; then

      database_name="$(printf ${database_dir}|sed -E 's|^\./||g')"

      if [ -n "${database_name}" ]; then

        if [ -z "${given_database_name}" -o "${database_name}" = "${given_database_name}" ]; then

          DATABASE_DIR="${DATABASES_DIR}/${database_name}"
          DATABASE_FILES_DIR="${DATABASE_DIR}/files"

          EXTRACTED_DIR="${DATABASE_FILES_DIR}/extracted"

          if [ -d "${EXTRACTED_DIR}" ]; then

            PROCESSING_DIR="${DATABASE_FILES_DIR}/processing"
            PROCESSED_DIR="${DATABASE_FILES_DIR}/processed"

            mkdir -p "${PROCESSING_DIR}" "${PROCESSED_DIR}"

            for file in $(find ${PROCESSING_DIR} -depth 1 -type f -name '*.txt'|xargs); do
              mv "${file}" "${EXTRACTED_DIR}/"
            done

            for extracted_file in $(find ${EXTRACTED_DIR} -depth 1 -type f -name '*.txt'|xargs); do
              processing_file="${PROCESSING_DIR}/$(basename ${extracted_file})"
              processed_file="${PROCESSED_DIR}/$(basename ${extracted_file})"
              mv "${extracted_file}" "${processing_file}"
              (
                cd "${WORKSPACE_DIR}"
                ( "${GTFS_TOOLS_LIBEXEC_DIR}/gtfs-process.rb" "${database_name}" && mv "${processing_file}" "${processed_file}" ) || mv "${processing_file}" "${extracted_file}"
              )
            done

          fi

        fi

      fi

    fi

  done

)
